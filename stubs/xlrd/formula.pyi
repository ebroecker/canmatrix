# Stubs for xlrd.formula (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .timemachine import *
from typing import Any, Optional

FMLA_TYPE_CELL: int
FMLA_TYPE_SHARED: int
FMLA_TYPE_ARRAY: int
FMLA_TYPE_COND_FMT: int
FMLA_TYPE_DATA_VAL: int
FMLA_TYPE_NAME: int
oBOOL: int
oERR: int
oNUM: int
oREF: int
oREL: int
oSTRG: int
oUNK: int
okind_dict: Any

class FormulaError(Exception): ...

class Operand:
    value: Any = ...
    kind: Any = ...
    text: str = ...
    rank: Any = ...
    def __init__(self, akind: Optional[Any] = ..., avalue: Optional[Any] = ..., arank: int = ..., atext: str = ...) -> None: ...

class Ref3D(tuple):
    coords: Any = ...
    relflags: Any = ...
    def __init__(self, atuple: Any) -> None: ...

def evaluate_name_formula(bk: Any, nobj: Any, namex: Any, blah: int = ..., level: int = ...) -> None: ...
def decompile_formula(bk: Any, fmla: Any, fmlalen: Any, fmlatype: Optional[Any] = ..., browx: Optional[Any] = ..., bcolx: Optional[Any] = ..., blah: int = ..., level: int = ..., r1c1: int = ...): ...
def dump_formula(bk: Any, data: Any, fmlalen: Any, bv: Any, reldelta: Any, blah: int = ..., isname: int = ...) -> None: ...
def cellname(rowx: Any, colx: Any): ...
def cellnameabs(rowx: Any, colx: Any, r1c1: int = ...): ...
def colname(colx: Any): ...
def rangename3d(book: Any, ref3d: Any): ...
def rangename3drel(book: Any, ref3d: Any, browx: Optional[Any] = ..., bcolx: Optional[Any] = ..., r1c1: int = ...): ...
