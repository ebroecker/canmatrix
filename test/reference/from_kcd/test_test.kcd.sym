FormatVersion=5.0 // Do not edit this line!
Title="canmatrix-Export"
{ENUMS}
enum Baudrate(0="125K", 1="250K", 2="500K", 3="1M")
enum BridgeAFault_status(0="Normal", 1="FLT_A", 2="N/A", 3="FLT_C", 4="OverVoltage", 5="FLT_B", 6="Overcurrent", 7="5V")
enum BridgeAVoltageOk_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum BridgeBFault_status(0="Normal", 1="FLT_A", 2="N/A", 3="FLT_C", 4="OverVoltage", 5="FLT_B", 6="Overcurrent", 7="5V")
enum BridgeBVoltageOk_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum CANbus_status(0="Normal", 1="Warning", 3="ErrorPassive", 4="N/A")
enum ControlHardwareFail_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum EStopShutdown_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum EnableSplitPhase_command(0="Normal - Three Phase Mode", 1="Enable Split Phase Mode", 2="Error", 3="N/A")
enum EnableSplitPhase_echo(0="Normal - Three Phase Mode", 1="Enable Split Phase Mode", 2="Error", 3="N/A")
enum EnableUPSMode_command(0="Disable", 1="Enable", 2="Error", 3="N/A")
enum EnableUPSMode_echo(0="Disable", 1="Enable", 2="Error", 3="N/A")
enum Enable_command(0="Disable", 1="Enable", 2="Error", 3="N/A")
enum Enable_echo(0="Disable", 1="Enable", 2="Error", 3="N/A")
enum FaultClear_command(0="Normal", 1="Clear Faults", 2="Error", 3="N/A")
enum FaultClr_echo(0="Normal", 1="Clear Faults", 2="Error", 3="N/A")
enum ForceRelayK1_Precharge_command(0="Normal", 1="Force On", 2="Error", 3="N/A")
enum ForceRelayMX1_command(0="Normal", 1="Force On", 2="Error", 3="N/A")
enum ForceRelayMX2_command(0="Normal", 1="Force On", 2="Error", 3="N/A")
enum ForceRelayRelayK2_DCRun_comand(0="Normal", 1="Force On", 2="Error", 3="N/A")
enum GeneralFault_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum HardwareEnable_status(0="Not Active", 1="Active", 2="Error", 3="N/A")
enum IllegalTransition_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum InvalidEEHeader_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum InvalidEESection_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum InvertHwEnable_command(0="No invert", 1="Invert", 2="Error", 3="N/A")
enum K1PrechargePermissive_status(0="Open", 1="Closed", 2="Error", 3="N/A")
enum K2DCRunPermissive_status(0="Open", 1="Closed", 2="Error", 3="N/A")
enum LineVoltageDetected_status(0="No_Voltage", 1="Voltage_Detected", 2="Error", 3="N/A")
enum LossOfAC_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum LossValidControlMessage_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum MX1Permissive_status(0="Open", 1="Closed", 2="Error", 3="N/A")
enum MX2Permissive_status(0="Open", 1="Closed", 2="Error", 3="N/A")
enum MasterFollowerMode_command(0="Master", 1="Follower", 2="Error", 3="N/A")
enum MessageValidModeControl_status(0="Invalid", 1="Valid", 2="Error", 3="N/A")
enum MessageValidPowerCMD_status(0="Invalid", 1="Valid", 2="Error", 3="N/A")
enum MessageValidVF_status(0="Invalid", 1="Valid", 2="Error", 3="N/A")
enum OvercurrentAC_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum OvercurrentDC_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum OvertempInternal_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum OvertempPowerDevice_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum OvervoltageDC_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum PhaseRotation_command(0="Negative", 1="Positive", 2="Error", 3="N/A")
enum PhaseRotation_echo(0="Negative", 1="Positive", 2="Error", 3="N/A")
enum PhaseRotation_status(0="Negative", 1="Positive", 2="Error", 3="N/A")
enum PowerAvailAC_status(0="None", 1="Available", 2="Error", 3="N/A")
enum PowerAvailDC_status(0="None", 1="Available", 2="Error", 3="N/A")
enum PowerCircuitEnabled_status(0="Disabled", 1="Enabled", 2="Error", 3="N/A")
enum State_status(0="Power On Reset, and a quoted comma", 1="Ready", 2="Following", 3="Fault", 4="Forming", 5="N/A", 6="N/A", 7="N/A", 8="N/A", 9="N/A", 10="N/A", 11="N/A", 12="N/A", 13="N/A", 14="N/A", 15="N/A")
enum StatusBaudrate(0="125K", 1="250K", 2="500K", 3="1M")
enum StatusThermalOverload(0="Warning", 1="Fault", 2="Error", 3="N/A")
enum ThermalOverload(0="Warning", 1="Fault", 2="Error", 3="N/A")
enum UndervoltageDC_status(0="Normal", 1="Fault Active", 2="Error", 3="N/A")
enum WriteSerialNumber(0="Disable", 1="Enable", 2="Error", 3="N/A")

{SENDRECEIVE}

[CommandModeControl]
ID=00FFAB41h	// Operational commands are received by the module via control bits within this message.
Type=Extended
DLC=8
Var=Enable_command unsigned 0,2 /min:0 /max:3 /e:Enable_command	// Run command.  When set to a value of 'Enable', causes transition to grid forming or grid following mode depending on whether AC power is detected.  Must be set to 'Disable' to leave POR or FAULTED state.
Var=FaultClear_command unsigned 2,2 /min:0 /max:3 /e:FaultClear_command	// Clears the latched fault message.
Var=InvertHwEnable_command unsigned 56,2 /min:0 /max:3 /e:InvertHwEnable_command	// Inverts the logic of the Hardware Enable input.
Var=EnableUPSMode_command unsigned 58,2 /min:0 /max:3 /e:EnableUPSMode_command	// Enables uninterruptible operation when transitioning from GRID FOLLOWING to GRID FORMING operation.  If operating in GRID FOLLOWING mode, and AC grid voltage is interrupted, the module will transition to GRID FORMING mode, with no interruption in power.
Var=EnableSplitPhase_command unsigned 60,2 /min:0 /max:3 /e:EnableSplitPhase_command	// Dictates to the module whether it is connected to a three-phase (four wire) or split phase (L1, L2 and N) electrical system.
Var=ForceRelayMX1_command unsigned 32,2 /min:0 /max:3 /e:ForceRelayMX1_command	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=ForceRelayMX2_command unsigned 34,2 /min:0 /max:3 /e:ForceRelayMX2_command	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=ForceRelayK1_Precharge_command unsigned 36,2 /min:0 /max:3 /e:ForceRelayK1_Precharge_command	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=ForceRelayRelayK2_DCRun_comand unsigned 38,2 /min:0 /max:3 /e:ForceRelayRelayK2_DCRun_comand	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=PhaseRotation_command unsigned 62,2 /min:0 /max:3 /e:PhaseRotation_command	// Specifies phase rotation direction.  Only active while transitioning from READY to GRID_FORMING.
Var=MasterFollowerMode_command unsigned 16,2 /min:0 /max:3 /e:MasterFollowerMode_command	// Specifies what power command the inverter will follow in GRID FOLLOWING mode.  When configured as Master, CommandPower will be used as the power command.  When configured as Slave, the values in StatusMeasuredPower of the master inverter will be used.

[CommandPower]
ID=0CFFAC41h	// Sets the desired real (P) and reactive (Q) power levels for the module to follow while in the GRID FOLLOWING mode.
Type=Extended
DLC=8
Var=RealPower command signed 24,32 /u:W /min:-90000 /max:90000	// Commanded real power (W) while in grid following mode - positive real power is defined as power being put into the ac network.
Var=ReactivePower_command signed 56,32 /u:VA /min:-90000 /max:90000	// Commanded reactive power (VA) while in grid following mode - positive reactive power is defined as the converter having a leading power factor.

[CommandVF]
ID=0CFFAE41h	// Sets the desired voltage and frequency for the module to produce while in the GRID FORMING mode.  In addition, while in the READY and GRID FOLLOWING modes, this message is used to set the nominal voltage levels for detection of acceptable AC line voltage.
Type=Extended
DLC=8
Var=Voltage_command unsigned 8,16 /u:Vrms /f:0.1 /min:10 /max:500	// Desired output voltage while in grid forming mode.
Var=Frequency_command unsigned 24,16 /u:Hz /f:0.1 /min:45 /max:65	// Desired output frequency while in grid forming mode.

[MasterMeasuredPower]
ID=0CFFCAF6h	// Returns the actual measured power.
Type=Extended
DLC=8
Var=RealPower_measured signed 24,32 /u:W /min:-2147483648 /max:2147483647	// Measured real power of master unit.
Var=ReactivePower_measured signed 56,32 /u:VA /min:-2147483648 /max:2147483647	// Measured reactive power of master unit.

[CommandFactoryControl]
ID=0CFFAF41h
Type=Extended
DLC=8
Var=WriteSerialNumber unsigned 0,2 /min:0 /max:3 /e:WriteSerialNumber
Var=SerialNumber unsigned 56,32 /min:0 /max:4294967295
Var=FactoryAccess unsigned 24,16 /min:0 /max:65535

[CommandSetNVParam]
ID=0CFFAA41h	// Provides access to configure non-volatile parameters.  Note that these parameters can only be set when the inverter's power stage is disabled (PowerCircuitEnabled_status in StatusBits message is 'Disabled.')
Type=Extended
DLC=8
Mux=CommandSetNVParam_MUX0 8,16 0 
Var=Dummy unsigned 24,16 /min:0 /max:65535

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX1 8,16 1 
Var=VUnder50pct unsigned 24,16 /u:ms /min:1 /max:30000	// Determines the fault trip time when Line-to-line rms voltage for a phase remains under 50 percent of the nominal value specified in the CommandVF message while the inverter is running in GRID FOLLOWING mode.
Var=V50to88pct unsigned 40,16 /u:ms /min:1 /max:30000	// Determines the fault trip time when Line-to-line rms voltage for a phase remains between 50 and 88 percent of the nominal value specified in the CommandVF message while the inverter is running in GRID FOLLOWING mode.
Var=V110to120pct unsigned 56,16 /u:ms /min:1 /max:30000	// Determines the fault trip time when Line-to-line rms voltage for a phase remains between 110 and 120 percent of the nominal value specified in the CommandVF message while the inverter is running in GRID FOLLOWING mode.

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX2 8,16 2 
Var=VOver120 unsigned 24,16 /min:1 /max:30000	// Determines the fault trip time when Line-to-line rms voltage for a phase remains Over 120 percent of the nominal value specified in the CommandVF message while the inverter is running in GRID FOLLOWING mode.

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX3 8,16 3 
Var=FreqHi unsigned 24,16 /u:Hz /f:0.1 /min:40 /max:70	// Determines the upper bound, above which the frequency monitor will trip if the line frequency remains for the time specified in FreqHi of the LFM_ClearingTimes Mux.
Var=FreqLo unsigned 40,16 /u:Hz /f:0.1 /min:40 /max:70	// Determines the upper bound, in which the frequency monitor will trip if the line frequency remains below this bound but above the value of FreqVeryLo for the time specified in FreqLo of the LFM_ClearingTimes Mux.
Var=FreqVeryLo unsigned 56,16 /u:Hz /f:0.1 /min:40 /max:70	// Determines the upper bound, in which the frequency monitor will trip if the line frequency remains below this bound but above the value of FreqVeryLo for the time specified in FreqLo of the LFM_ClearingTimes Mux.

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX4 8,16 4 
Var=FreqVeryLo unsigned 24,16 /u:ms /min:160 /max:160	// Determines the time it will take for a fault trip to occur when line frequency remains below the value specified in FreqVeryLo of the LFM_Limits Mux when the inverter is in GRID FOLLOWING mode.
Var=FreqLo unsigned 40,16 /u:ms /min:1 /max:30000	// Determines the time it will take for a fault trip to occur when line frequency remains between the value specified in FreqLo and FreqVeryLo of the LFM_Limits Mux when the inverter is in GRID FOLLOWING mode.
Var=FreqHi unsigned 56,16 /u:ms /min:160 /max:160	// Determines the time it will take for a fault trip to occur when line frequency remains above the value specified in FreqHi of the LFM_Limits Mux when the inverter is in GRID FOLLOWING mode.

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX5 8,16 5 
Var=NodeID unsigned 16,8 /min:0 /max:247	// J1939 Source Address node for the module.
Var=SA_Mask unsigned 24,8 /min:0 /max:255	// Not presently used.
Var=Baudrate unsigned 36,4 /min:0 /max:3 /e:Baudrate	// CAN baudrate

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX6 8,16 6 
Var=ThermalOverload unsigned 16,2 /min:0 /max:3 /e:ThermalOverload	// Configures action to take when thermal overload input is active.

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX7 8,16 7 
Var=MX1Open unsigned 24,16 /u:ms /min:0 /max:5000	// Maximum time required for the MX1 contactor to open.
Var=MX1Close unsigned 40,16 /u:ms /min:0 /max:2000	// Maximum time required for the MX1 contactor to close.
Var=MX2Open unsigned 56,16 /u:ms /min:0 /max:65535	// Maximum time required for the MX2 contactor to open.

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX8 8,16 8 
Var=MX2Close unsigned 24,16 /u:ms /min:0 /max:2000	// Maximum time required for the MX2 contactor to open.
Var=K1Open unsigned 40,16 /u:ms /min:0 /max:2000	// Maximum time required for the K1 contactor to open.
Var=K1Close unsigned 56,16 /u:ms /min:0 /max:2000	// Maximum time required for the K1 contactor to close.

[CommandSetNVParam]
DLC=8
Mux=CommandSetNVParam_MUX10 8,16 000Ah
Var=K2Open unsigned 24,16 /u:ms /min:0 /max:2000	// Maximum time required for the K2 contactor to open.
Var=K2Close unsigned 40,16 /u:ms /min:0 /max:2000	// Maximum time required for the K2 contactor to close.

[CommandModeControlAPU2]
ID=00FF9B41h	// Operational commands are received by the module via control bits within this message.
Type=Extended
DLC=8
Var=Enable_command unsigned 0,2 /min:0 /max:3 /e:Enable_command	// Run command.  When set to a value of 'Enable', causes transition to grid forming or grid following mode depending on whether AC power is detected.  Must be set to 'Disable' to leave POR or FAULTED state.
Var=FaultClear_command unsigned 2,2 /min:0 /max:3 /e:FaultClear_command	// Clears the latched fault message.
Var=InvertHwEnable_command unsigned 56,2 /min:0 /max:3 /e:InvertHwEnable_command	// Inverts the logic of the Hardware Enable input.
Var=EnableUPSMode_command unsigned 58,2 /min:0 /max:3 /e:EnableUPSMode_command	// Enables uninterruptible operation when transitioning from GRID FOLLOWING to GRID FORMING operation.  If operating in GRID FOLLOWING mode, and AC grid voltage is interrupted, the module will transition to GRID FORMING mode, with no interruption in power.
Var=EnableSplitPhase_command unsigned 60,2 /min:0 /max:3 /e:EnableSplitPhase_command	// Dictates to the module whether it is connected to a three-phase (four wire) or split phase (L1, L2 and N) electrical system.
Var=ForceRelayMX1_command unsigned 32,2 /min:0 /max:3 /e:ForceRelayMX1_command	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=ForceRelayMX2_command unsigned 34,2 /min:0 /max:3 /e:ForceRelayMX2_command	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=ForceRelayK1_Precharge_command unsigned 36,2 /min:0 /max:3 /e:ForceRelayK1_Precharge_command	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=ForceRelayRelayK2_DCRun_comand unsigned 38,2 /min:0 /max:3 /e:ForceRelayRelayK2_DCRun_comand	// If set to 'Force On,' will force the relay closed, overriding firmware state machine commands.  Meant for diagnostic purposes only.
Var=PhaseRotation_command unsigned 62,2 /min:0 /max:3 /e:PhaseRotation_command	// Specifies phase rotation direction.  Only active while transitioning from READY to GRID_FORMING
Var=MasterFollowerMode_command unsigned 16,2 /min:0 /max:3 /e:MasterFollowerMode_command	// Specifies what power command the inverter will follow in GRID FOLLOWING mode.  When configured as Master, CommandPower will be used as the power command.  When configured as Slave, the values in StatusMeasuredPower of the master inverter will be used.

[CommandPowerAPU2]
ID=0CFF9C41h	// Sets the desired real (P) and reactive (Q) power levels for the module to follow while in the GRID FOLLOWING mode.
Type=Extended
DLC=8
Var=RealPower_command signed 24,32 /u:W /min:-90000 /max:90000	// Commanded real power (W) while in grid following mode - positive real power is defined as power being put into the ac network.
Var=ReactivePower_command signed 56,32 /u:VA /min:-90000 /max:90000	// Commanded reactive power (VA) while in grid following mode - positive reactive power is defined as the converter having a leading power factor.

[CommandVFAPU2]
ID=0CFF9E41h	// Sets the desired voltage and frequency for the module to produce while in the GRID FORMING mode.  In addition, while in the READY and GRID FOLLOWING modes, this message is used to set the nominal voltage levels for detection of acceptable AC line voltage.
Type=Extended
DLC=8
Var=Voltage_command unsigned 8,16 /u:Vrms /f:0.1 /min:10 /max:500	// Desired output voltage while in grid forming mode.
Var=Frequency_command unsigned 24,16 /u:Hz /f:0.1 /min:45 /max:65	// Desired output frequency while in grid forming mode.

[MasterMeasuredPowerAPU2]
ID=0CFFCAF7h	// Returns the actual measured power.
Type=Extended
DLC=8
Var=RealPower_measured signed 24,32 /u:W /min:-2147483648 /max:2147483647	// Measured real power of master unit.
Var=ReactivePower_measured signed 56,32 /u:VA /min:-2147483648 /max:2147483647	// Measured reactive power of master unit.

[StatusMeasuredPower]
ID=0CFFCAF7h	// Returns the actual measured power.
Type=Extended
DLC=8
CycleTime=100
Var=RealPower_measured signed 24,32 /u:W /min:-2147483648 /max:2147483647	// Measured real power.
Var=ReactivePower_measured signed 56,32 /u:VA /min:-2147483648 /max:2147483647	// Measured reactive power.

[StatusCommandedPower]
ID=18FFC4F7h	// Echoes the commanded power (P&Q) as received in CommandPQ.
Type=Extended
DLC=8
CycleTime=100
Var=RealPower_echo signed 24,32 /u:W /min:-2147483648 /max:2147483647	// Echoed real power command.
Var=ReactivePower_echo signed 56,32 /u:VA /min:-2147483648 /max:2147483647	// Echoed reactive power command.

[StatusBits]
ID=0CFFC3F7h	// Bits representing the status of the power module.
Type=Extended
DLC=8
CycleTime=100
Var=State_status unsigned 0,4 /min:0 /max:7 /e:State_status	// Active control mode.
Var=MX2Permissive_status unsigned 18,2 /min:0 /max:3 /e:MX2Permissive_status	// MX2 relay status
Var=PowerAvailAC_status unsigned 10,2 /min:0 /max:3 /e:PowerAvailAC_status	// Indicates that AC power is connected and that voltage and frequency are within nominal ranges.
Var=PowerAvailDC_status unsigned 12,2 /min:0 /max:3 /e:PowerAvailDC_status	// Indicates that DC bus voltage is within operating range.
Var=PowerCircuitEnabled_status unsigned 14,2 /min:0 /max:3 /e:PowerCircuitEnabled_status	// Indicates whether the switching devices are active.
Var=HardwareEnable_status unsigned 8,2 /min:0 /max:3 /e:HardwareEnable_status	// Status of the hardware enable.
Var=Enable_echo unsigned 4,2 /min:0 /max:3 /e:Enable_echo	// Echos the state of the Enable command withing the CommandModeControl message.
Var=FaultClr_echo unsigned 6,2 /min:0 /max:3 /e:FaultClr_echo	// Echos the state of the FaultClear command withing the CommandModeControl message.
Var=MessageValidModeControl_status unsigned 24,2 /min:0 /max:3 /e:MessageValidModeControl_status	// Indicates the validity of the CommandModeControl message.  Message must be received at least once per second and parameter data within range to be considered valid.
Var=MX1Permissive_status unsigned 16,2 /min:0 /max:3 /e:MX1Permissive_status	// MX1 relay status
Var=K2DCRunPermissive_status unsigned 22,2 /min:0 /max:3 /e:K2DCRunPermissive_status	// K2 DC Run relay status.
Var=K1PrechargePermissive_status unsigned 20,2 /min:0 /max:3 /e:K1PrechargePermissive_status	// K1 precharge relay status.
Var=MessageValidPowerCMD_status unsigned 26,2 /min:0 /max:3 /e:MessageValidPowerCMD_status	// Indicates the validity of the CommandPQ message.  Message must be received at least once per second and parameter data within range to be considered valid.
Var=MessageValidVF_status unsigned 28,2 /min:0 /max:3 /e:MessageValidVF_status	// Indicates the validity of the CommandVF message.  Message must be received at least once per second and parameter data within range to be considered valid.
Var=CANbus_status unsigned 30,2 /min:0 /max:3 /e:CANbus_status	// Operational status of the CAN bus driver.
Var=EnableUPSMode_echo unsigned 32,2 /min:0 /max:3 /e:EnableUPSMode_echo	// Echos the state of the EnableUPSMode command withing the CommandModeControl message.
Var=EnableSplitPhase_echo unsigned 34,2 /min:0 /max:3 /e:EnableSplitPhase_echo	// Echos the state of the EnableSplitPhase command withing the CommandModeControl message.
Var=PhaseRotation_status unsigned 36,2 /min:0 /max:3 /e:PhaseRotation_status	// Phase rotation order.  When L1 phase angle leads L2 phase angle, rotation is considered positive.
Var=LineVoltageDetected_status unsigned 38,2 /min:0 /max:3 /e:LineVoltageDetected_status	// Flag indicating if voltage is detected on L1, L2 or L3.
Var=PhaseRotation_echo unsigned 40,2 /min:0 /max:3 /e:PhaseRotation_echo	// Echos the state of PhaseRotation_command withing the CommandModeControl message.

[StatusControlVoltage]
ID=1CFFC5F7h	// Lists present voltage of each power supply on the control board (24V, 15V, 5V, and 3.3V.)
Type=Extended
DLC=8
CycleTime=100
Var=v5p0_Supply signed 8,16 /u:V /f:0.01 /min:-327.68 /max:327.67	// Present voltage of the control board 5V power suppy.
Var=v3p3_Supply signed 24,16 /u:V /f:0.01 /min:-327.68 /max:327.67	// Present voltage of the control board 3.3V power supply.
Var=v24_Supply signed 40,16 /u:V /f:0.01 /min:-327.68 /max:327.67	// Present voltage of the control board 24V power supply.
Var=v15_Supply signed 56,16 /u:V /f:0.01 /min:-327.68 /max:327.67	// Present voltage of the control board 15V power supply.

[StatusTemps]
ID=18FFCBF7h	// Returns the inlet water temperature to the module as well as module internal ambient temperature.
Type=Extended
DLC=8
CycleTime=100
Var=TempInlet_measured signed 8,16 /u:C /f:0.1 /min:-3276.8 /max:3276.7000000000003	// Coolant inlet temperature
Var=TempInternal_measured signed 24,16 /u:C /f:0.1 /min:-3276.8 /max:3276.7000000000003	// Internal ambient temperature
Var=ConverterLosses unsigned 40,16 /u:W /min:0 /max:65535	// Power converter thermal loss

[StatusFaults]
ID=0CFFC8F7h	// Fault bits.
Type=Extended
DLC=8
CycleTime=100
Var=BridgeAVoltageOk_status unsigned 59,1 /min:0 /max:1 /e:BridgeAVoltageOk_status	// Indicates whether a hardware trip has been activated.
Var=OvercurrentAC_status unsigned 2,2 /min:0 /max:3 /e:OvercurrentAC_status	// Set immediately upon the software detection of AC current exceeding the threshold value.
Var=BridgeBVoltageOk_status unsigned 43,1 /min:0 /max:1 /e:BridgeBVoltageOk_status	// Indicates whether a hardware trip has been activated.
Var=OvervoltageDC_status unsigned 8,2 /min:0 /max:3 /e:OvervoltageDC_status	// Set immediately upon the software detection of DC voltage exceeding the threshold value.
Var=OvertempPowerDevice_status unsigned 14,2 /min:0 /max:3 /e:OvertempPowerDevice_status	// Set immediately upon the software detection of an IGBT temperature exceeding the threshold value.
Var=OvertempInternal_status unsigned 12,2 /min:0 /max:3 /e:OvertempInternal_status	// Set immediately upon the software detection of an internal inverter temperature exceeding the threshold value.
Var=LossValidControlMessage_status unsigned 20,4 /min:0 /max:15 /e:LossValidControlMessage_status	// Set whenever a control message required for operation contains out of range data or has not been received within the required timeout period.
Var=UndervoltageDC_status unsigned 10,2 /min:0 /max:3 /e:UndervoltageDC_status	// Indicates loss of DC source voltage.
Var=ControlHardwareFail_status unsigned 16,4 /min:0 /max:15 /e:ControlHardwareFail_status	// Set upon the failure of control hardware to return expected response.
Var=OvercurrentDC_status unsigned 6,2 /min:0 /max:3 /e:OvercurrentDC_status	// Set immediately upon the software detection of DC current exceeding the threshold value.
Var=GeneralFault_status unsigned 0,2 /min:0 /max:3 /e:GeneralFault_status	// Will be set any time a fault shutdown has occurred.  It is always accompanied by an additional fault descriptor.
Var=LossOfAC_status unsigned 4,2 /min:0 /max:3 /e:LossOfAC_status	// In grid following mode, this fault will be triggered if AC voltage or frequency goes outside of nominal bounds and EnableUPSMode is not set in the CommandModeControl message.
Var=EStopShutdown_status unsigned 24,2 /min:0 /max:3 /e:EStopShutdown_status	// Set when an enable request has been sent whithout the WakeUpSignal flag (hardware enable) in the StatusBits message being active.
Var=BridgeAFault_status unsigned 56,3 /min:0 /max:7 /e:BridgeAFault_status	// Each bridge has hardware protection features as a backup to software protection.  This bitfield indicates which, if any of these protection trips is active.
Var=BridgeBFault_status unsigned 40,3 /min:0 /max:7 /e:BridgeBFault_status	// Each bridge has hardware protection features as a backup to software protection.  This bitfield indicates which, if any of these protection trips is active.
Var=IllegalTransition_status unsigned 26,2 /min:0 /max:3 /e:IllegalTransition_status	// Indicates that an illegal state transition was requested.  For example, this fault will occur if Enable is commanded and line voltage is detected but AC power is not available.
Var=InvalidEEHeader_status unsigned 28,2 /min:0 /max:3 /e:InvalidEEHeader_status	// Indicates that reading of non-volatile parameters at power-up failed.
Var=InvalidEESection_status unsigned 30,2 /min:0 /max:3 /e:InvalidEESection_status	// Indicates that reading or writing of an non-volatile parameter section failed.
Var=ThermalOverload unsigned 32,2 /min:0 /max:3 /e:ThermalOverload

[StatusACParameters]
ID=0CFFC2F7h	// RMS AC Voltage, current, and frequency measured by line A, B and C feedbacks.
Type=Extended
DLC=8
CycleTime=100
Var=VoltageAC_measured signed 8,16 /u:V /f:0.1 /min:-3276.8 /max:3276.7000000000003	// Measured RMS AC voltage.
Var=CurrentAC_measured signed 24,16 /u:A /min:-32768 /max:32767	// Measured RMS AC current.
Var=Frequency_measured signed 40,16 /u:Hz /f:0.1 /min:-3276.8 /max:3276.7000000000003	// Measured frequency.

[StatusDCParameters]
ID=1CFFC7F7h	// Measured (boosted) DC Bus voltage, DC Current, and estimated DC Input voltage.
Type=Extended
DLC=8
CycleTime=100
Var=VoltageDCBus signed 24,16 /u:V /min:-32768 /max:32767	// Measured DC bus voltage.
Var=CurrentDC_measured signed 40,16 /u:A /min:-32768 /max:32767	// Measured DC current.
Var=VoltageDCInput_measured signed 8,16 /u:V /min:-32768 /max:32767	// Estimated DC input voltage.

[StatusControlVolts2]
ID=1CFFC6F7h	// Present voltage of the -15V power supply on the control board.
Type=Extended
DLC=8
CycleTime=100
Var=n15V_Supply signed 8,16 /u:V /f:0.01 /min:-327.68 /max:327.67	// Present voltage of the control board -15V power supply.
Var=DiodeTemperature unsigned 40,16 /u:C /min:0 /max:65535	// Hottest diode
Var=IGBTTemperature unsigned 56,16 /u:C /min:0 /max:65535	// Hottest IGBT

[softwareRev]
ID=1CFFC1F7h	// Software revision.
Type=Extended
DLC=8
Var=InterfaceRev unsigned 24,16 /f:0.01 /min:0 /max:655.35	// Software revision of the CAN communication interface.
Var=ControlSwRev unsigned 8,16 /f:0.01 /min:0 /max:655.35	// Software revision of the control firmware.
Var=BuildTime unsigned 56,32 /min:0 /max:4294967295	// Build timestamp.

[StatusCommandVF]
ID=18FFC9F7h	// Echoes the voltage and frequency commands from commandVF.
Type=Extended
DLC=8
CycleTime=100
Var=Voltage_echo unsigned 8,16 /u:Vrms /f:0.1 /min:0 /max:6553.5	// Echoed voltage command
Var=Frequency_echo unsigned 24,16 /u:Hz /f:0.1 /min:0 /max:6553.5	// Echoed frequency command.

[serialNumber]
ID=1CFFCCF7h	// Serial number of the power module.
Type=Extended
DLC=8
Var=SerialNumber unsigned 24,32 /min:0 /max:4294967295	// Serial number of the power module.

[softwareRevHash]
ID=1CFFCDF7h	// Unique software revision identification hashcode.
Type=Extended
DLC=8
Var=Hash unsigned 28,28 /min:0 /max:268435455	// Unique revision identification hashcode.

[StatusNVParam]
ID=1CFFA9F7h	// Echos back parameter values.
Type=Extended
DLC=8
Mux=StatusNVParam_MUX0 8,16 0 
Var=Dummy unsigned 24,16 /min:5 /max:10

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX1 8,16 1 
Var=VUnder50pct unsigned 24,16 /u:ms /min:1 /max:30000
Var=V50to88pct unsigned 40,16 /u:ms /min:1 /max:30000
Var=V110to120pct unsigned 56,16 /u:ms /min:1 /max:30000

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX2 8,16 2 
Var=VOver120 unsigned 24,16 /min:1 /max:30000

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX3 8,16 3 
Var=FreqHi unsigned 24,16 /u:Hz /f:0.1 /min:40 /max:70
Var=FreqLo unsigned 40,16 /u:Hz /f:0.1 /min:40 /max:70
Var=FreqVeryLo unsigned 56,16 /u:Hz /f:0.1 /min:40 /max:70

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX4 8,16 4 
Var=FreqVeryLo unsigned 24,16 /u:ms /min:160 /max:160
Var=FreqLo unsigned 40,16 /u:ms /min:1 /max:30000
Var=FreqHi unsigned 56,16 /u:ms /min:160 /max:160

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX5 8,16 5 
Var=StatusNodeID unsigned 16,8 /min:0 /max:247	// J1939 Source Address node for the module
Var=StatusSA_Mask unsigned 24,8 /min:0 /max:255	// Mask used to configure from which master source addresses to accept commands.
Var=StatusBaudrate unsigned 36,4 /min:0 /max:3 /e:StatusBaudrate

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX6 8,16 6 
Var=StatusThermalOverload unsigned 16,2 /min:0 /max:3 /e:StatusThermalOverload	// Configured action to take when thermal overload input is active.

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX7 8,16 7 
Var=StatusMX1Open unsigned 24,16 /u:ms /min:0 /max:5000	// Maximum time required for the MX1 contactor to open.
Var=StatusMX1Close unsigned 40,16 /u:ms /min:0 /max:2000	// Maximum time required for the MX1 contactor to close.
Var=StatusMX2Open unsigned 56,16 /u:ms /min:0 /max:65535	// Maximum time required for the MX2 contactor to open.

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX8 8,16 8 
Var=StatusMX2Close unsigned 24,16 /u:ms /min:0 /max:2000	// Maximum time required for the MX2 contactor to open.
Var=StatusK1Open unsigned 40,16 /u:ms /min:0 /max:2000	// Maximum time required for the K1 contactor to open.
Var=StatusK1Close unsigned 56,16 /u:ms /min:0 /max:2000	// Maximum time required for the K1 contactor to close.

[StatusNVParam]
DLC=8
Mux=StatusNVParam_MUX9 8,16 9 
Var=StatusK2Open unsigned 24,16 /u:ms /min:0 /max:2000	// Maximum time required for the K2 contactor to open.
Var=StatusK2Close unsigned 40,16 /u:ms /min:0 /max:2000	// Maximum time required for the K2 contactor to close.

[StatusLineCurrents]
ID=18FFD0F7h	// Measured RMS line currents.
Type=Extended
DLC=8
CycleTime=100
Var=L1Current_measured unsigned 8,16 /u:A /min:0 /max:65535	// Measured L1 RMS line current.
Var=L2Current_measured unsigned 24,16 /u:A /min:0 /max:65535	// Measured L2 RMS line current.
Var=L3Current_measured unsigned 40,16 /u:A /min:0 /max:65535	// Measured L3 RMS line current.

[StatusLineVoltages]
ID=18FFD1F7h	// Measured RMS line voltages.
Type=Extended
DLC=8
CycleTime=100
Var=L1Voltage_measured unsigned 8,16 /u:Vrms /f:0.1 /min:0 /max:6553.5	// Measured L1 RMS line-neutral voltage
Var=L2Voltage_measured unsigned 24,16 /u:Vrms /f:0.1 /min:0 /max:6553.5	// Measured L2 RMS line-neutral voltage
Var=L3Voltage_measured unsigned 40,16 /u:Vrms /f:0.1 /min:0 /max:6553.5	// Measured L3 RMS line-neutral voltage

